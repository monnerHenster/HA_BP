blueprint:
  name: Group bidirectional switch sync (one lock; no !input in templates)
  description: >
    组内任意一个 switch 状态变化都会同步到其它所有成员。
    使用一个 input_boolean 锁避免死循环。把需要镜像的开关都放进同一组。
  domain: automation
  input:
    switches:
      name: 同步组（开关列表）
      selector:
        entity:
          domain: switch
          multiple: true
    sync_lock:
      name: 同步锁 input_boolean
      selector:
        entity:
          domain: input_boolean

mode: queued
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input switches

# 锁为 on 时直接不执行（避免进入 action）
condition:
  - condition: state
    entity_id: !input sync_lock
    state: 'off'

action:
  - variables:
      master: "{{ trigger.entity_id }}"
      master_state: "{{ trigger.to_state.state if trigger.to_state is not none else 'unknown' }}"

  - service: input_boolean.turn_on
    target:
      entity_id: !input sync_lock

  # 逐个处理本组成员（不用模板拿 !input，直接在 for_each 里用）
  - repeat:
      for_each: !input switches
      sequence:
        # 跳过触发者自己
        - condition: template
          value_template: "{{ repeat.item != master }}"

        # 仅当目标状态与主状态不同，且目标状态不是 unknown 时才执行
        - condition: template
          value_template: "{{ states(repeat.item) != master_state and states(repeat.item) != 'unknown' }}"

        # 执行与主状态一致的操作
        - choose:
            - conditions:
                - condition: template
                  value_template: "{{ master_state == 'on' }}"
              sequence:
                - service: switch.turn_on
                  target:
                    entity_id: "{{ repeat.item }}"
            - conditions:
                - condition: template
                  value_template: "{{ master_state == 'off' }}"
              sequence:
                - service: switch.turn_off
                  target:
                    entity_id: "{{ repeat.item }}"

  - service: input_boolean.turn_off
    target:
      entity_id: !input sync_lock
